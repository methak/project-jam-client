{"version":3,"sources":["context.js","components/Auth/Signout.js","components/Header.js","client.js","graphql.js","components/Store/CreateStore.js","components/Store/StoreList.js","components/Store/StoreIndex.js","components/Map.js","App.js","components/Auth/Login.js","pages/Splash.js","reducer.js","VerifiedRoute.js","components/Item/Items.js","components/Store/StoreDetail.js","components/Store/ShoppingDetail.js","serviceWorker.js","index.js"],"names":["Context","createContext","currentUser","isAuth","draft","stores","currentStore","Signout","dispatch","useContext","onLogoutSuccess","type","console","log","render","onClick","Button","color","Header","state","Box","sx","width","flexGrow","AppBar","position","style","background","Toolbar","IconButton","size","edge","mr","picture","Avatar","alt","name","src","bgcolor","lightGreen","charAt","Typography","variant","component","pl","BASE_URL","useClient","useState","idToken","setIdtoken","useEffect","token","window","gapi","auth2","getAuthInstance","get","getAuthResponse","id_token","GraphQLClient","headers","authorization","UPDATE_ITEM_MUTATION","CreateStore","client","title","setTitle","content","setContent","handleSubmit","event","a","preventDefault","variables","image","latitude","longitude","request","createStore","payload","error","display","justifyContent","onSubmit","m","p","mt","borderRadius","noValidate","autoComplete","TextField","id","label","onChange","e","target","value","StoreList","props","React","setSelectedIndex","getStores","shopper","_id","my","flexDirection","alignItems","List","maxWidth","map","store","index","to","textDecoration","ListItem","handleListItemClick","secondaryAction","ListItemAvatar","ListItemText","primary","secondary","Divider","StoreIndex","height","Map","App","CssBaseline","Container","gap","gridTemplateColumns","Login","classes","onSuccess","googleUser","data","me","isSignedIn","onFailure","err","pt","boxShadow","pb","clientId","theme","Splash","reducer","newStore","prevStores","filter","updatedCurrentStore","updatedStores","VerifiedRoute","Component","rest","itemsArray","Items","itemValue","setItemValue","createFilterOptions","handleClick","item","storeId","createItem","minWidth","Autocomplete","newValue","inputValue","filterOptions","options","params","filtered","isExisting","some","option","push","selectOnFocus","clearOnBlur","handleHomeEndKeys","getOptionLabel","renderOption","freeSolo","renderInput","Stack","direction","spacing","Chip","bt","flexWrap","StoreDetail","handleDelete","itemId","deleteItem","handleUpdate","num","quantity","isBought","updateItem","Grid","container","xs","textAlign","mx","mb","dense","items","startIcon","ShoppingDetail","setImage","Input","styled","handleImageUpload","FormData","append","axios","post","res","url","updateStore","ListItemButton","htmlFor","accept","files","border","overflow","Boolean","location","hostname","match","Root","initialState","useReducer","Provider","exact","path","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4a4039a1.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nconst Context = createContext({\n    currentUser: null,\n    isAuth: false,\n    draft: null,\n    stores: [],\n    currentStore: null\n})\n\nexport default Context","import React, { useContext } from \"react\";\nimport { GoogleLogout } from \"react-google-login\";\n\nimport Button from '@mui/material/Button';\nimport Context from \"../../context\";\n\nconst Signout = () => {\n    const { dispatch } = useContext(Context)\n\n    const onSignout =() => {\n        dispatch({ type: \"SIGNOUT_USER\" })\n        console.log(\"User signed out\");\n    }\n    return (\n        <GoogleLogout \n            onLogoutSuccess = { onSignout } \n            //buttonText=\"Signout\"\n            render= {( { onClick }) => (\n                <Button color=\"inherit\" onClick={ onClick }>Sign out</Button>\n                \n            ) }\n        />\n    )\n\n}\n\nexport default Signout","import React, { useContext } from \"react\";\n\nimport Context from \"../context\";\nimport Signout from \"../components/Auth/Signout\"\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\n\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Avatar from '@mui/material/Avatar';\nimport { lightGreen } from '@mui/material/colors';\n\n\nconst Header = () => {\n    const { state } = useContext(Context)\n    const { currentUser } = state\n\n    return (\n        <Box sx={{ width :'100%', flexGrow: 1 }}>\n            <AppBar position=\"static\" style={{ background: '#2E3B55' }}>\n                <Toolbar>\n                    <IconButton\n                        size=\"large\"\n                        edge=\"start\"\n                        color=\"inherit\"\n                        aria-label=\"menu\"\n                        sx={{ mr: 2 }}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    { currentUser.picture ?\n                    <Avatar alt= {currentUser.name} src={currentUser.picture}/> :\n                    <Avatar alt= {currentUser.name} sx={{ bgcolor: lightGreen[500] }}> {currentUser.name.charAt(0)} </Avatar>   }\n                    <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1, pl:2 }}>\n                        Hello {currentUser.name}\n                    </Typography>\n                    \n                    <Signout />\n                </Toolbar>\n            </AppBar>\n        </Box>\n  );\n\n}\n\nexport default Header","import { useState, useEffect } from \"react\";\nimport { GraphQLClient } from \"graphql-request\";\n\n// export const BASE_URL = \"http://localhost:4000/qraphql\"\nexport const BASE_URL = \"https://quiet-refuge-81331.herokuapp.com/graphql\"\n\nexport const useClient = () => {\n  const [idToken, setIdtoken] = useState(\"\");\n\n  // to get the token id from the window, we have to WAIT thus the useEffect here\n  useEffect(() => {\n    const token = window.gapi.auth2\n      .getAuthInstance()\n      .currentUser.get()\n      .getAuthResponse().id_token;\n\n    setIdtoken(token);\n  }, []);\n\n  return new GraphQLClient(BASE_URL, {\n    headers: {\n      authorization: idToken\n    }\n  });\n};\n","export const GET_STORES_QUERY = `\nquery($shopper: ID!){\n  getStores (shopper : $shopper) {\n    _id\n    createdAt\n    title\n    image\n    content\n    latitude\n    longitude\n    shopper {\n      _id\n      name\n      email\n      picture\n    }\n    items {\n      _id\n      name\n      quantity\n      isBought\n      createdAt\n      shopper {\n        _id\n        name\n        picture\n      }\n    }\n  }\n}\n`;\n\nexport const CREATE_STORE_MUTATION = `\n  mutation($title: String, $image: String, $content: String, $latitude: Float, $longitude: Float) {\n    createStore(input: {\n      title: $title,\n      image: $image,\n      content: $content,\n      latitude: $latitude,\n      longitude: $longitude\n    }) {\n      _id\n      createdAt\n      title\n      image\n      content\n      longitude\n      latitude\n      shopper {\n        _id\n        name\n        email\n        picture\n      }\n    }\n  }\n`;\n\nexport const CREATE_ITEM_MUTATION = `\n  mutation($storeId: ID! $name: String!) {\n    createItem(storeId: $storeId, name: $name) {\n      _id\n      createdAt\n      title\n      content\n      image\n      latitude\n      longitude\n      shopper {\n        _id\n        name\n      }\n      items {\n        _id  \n        name\n        quantity\n        isBought\n        createdAt\n        \n      }\n    }\n  }\n`;\n\nexport const DELETE_ITEM_MUTATION = `\n  mutation($storeId: ID! $itemId: ID!) {\n    deleteItem(storeId: $storeId, itemId: $itemId) {\n      _id\n      createdAt\n      title\n      content\n      image\n      latitude\n      longitude\n      shopper {\n        _id\n        name\n      }\n      items {\n        _id  \n        name\n        quantity\n        isBought\n        createdAt\n        \n      }\n    }\n  }\n`;\n\nexport const UPDATE_ITEM_MUTATION = `\nmutation($storeId: ID! $itemId: ID!, $quantity: Int!, $isBought: Boolean!) {\n  updateItem(storeId: $storeId, itemId: $itemId,quantity: $quantity, isBought: $isBought) {\n    _id\n    createdAt\n    title\n    content\n    image\n    latitude\n    longitude\n    shopper {\n      _id\n      name\n    }\n    items {\n      _id  \n      name\n      quantity\n      isBought\n      createdAt\n      \n    }\n  }\n}\n`;\nexport const UPDATE_STORE_MUTATION = `\nmutation($storeId: ID! $image: String) {\n  updateStore(storeId: $storeId, image: $image) {\n    _id\n    createdAt\n    title\n    content\n    image\n    latitude\n    longitude\n    shopper {\n      _id\n      name\n    }\n    items {\n      _id  \n      name\n      quantity\n      isBought\n      createdAt\n      \n    }\n  }\n}\n`;","import React, { useState, useContext } from \"react\";\n\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\n\nimport Context from \"../../context\";\nimport { useClient } from \"../../client\"\nimport { CREATE_STORE_MUTATION } from '../../graphql'\n\nconst CreateStore = () => {\n    const client = useClient();\n    const { state, dispatch } = useContext(Context);\n    const [title, setTitle] = useState(\"\");\n    //const [image, setImage] = useState(\"\");\n    const [content, setContent] = useState(\"\");\n    //const [submitting, setSubmitting] = useState(false);\n\n    const handleDeleteDraft = () => {\n        console.log(\"Clear Input\");\n        setTitle(\"\");\n        //setImage(\"\");\n        setContent(\"\");\n        dispatch({ type: \"DELETE_DRAFT\" });\n    };\n\n    const handleSubmit = async event => {\n        try {\n          event.preventDefault();\n          //setSubmitting(true);\n          const url = \"\"\n          //const url = await handleImageUpload();\n          //const { latitude, longitude } = null;\n          const variables = { title, image: url, content, latitude: 0, longitude: 0 };\n          const { createStore } = await client.request(CREATE_STORE_MUTATION, variables);\n    \n          dispatch({ type: \"CREATE_STORE\", payload: createStore });\n          handleDeleteDraft();\n        } catch (err) {\n          //setSubmitting(false);\n          console.error(\"Error creating store\", err);\n        }\n    };\n\n      return (\n        <Box sx={{ display: 'flex', justifyContent: 'center', }}>\n          <Box component=\"form\" onSubmit={handleSubmit}\n            sx={{ '& .MuiTextField-root': { m: 1, width: '25ch' }, p: 4, mt: 2, bgcolor: 'white', borderRadius: 1}}\n            noValidate\n            autoComplete=\"off\">\n            <div>\n              <TextField name=\"title\" id=\"title\" label=\"Store Name\" onChange={e => setTitle(e.target.value)} />\n            </div>\n            <div>\n              <TextField name=\"content\" id=\"content\" label=\"Address\" onChange={e => setContent(e.target.value)} />\n            </div>\n            <Box sx={{ display: 'flex', justifyContent: 'flex-end', m:1}}>\n              <Button variant=\"outlined\" type=\"submit\">Create</Button>\n            </Box>\n          </Box>\n        </Box>\n      )\n}\nexport default CreateStore","import React, { useContext, useEffect} from \"react\";\nimport { Link } from 'react-router-dom'\n\nimport { useClient } from \"../../client\";\nimport Context from \"../../context\";\n\nimport Box from '@mui/material/Box';\nimport { List } from \"@mui/material\";\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\nimport Divider from '@mui/material/Divider';\nimport StorefrontIcon from '@mui/icons-material/Storefront';\nimport { IconButton } from \"@mui/material\";\nimport DragIndicatorIcon from '@mui/icons-material/DragIndicator';\n\nimport { GET_STORES_QUERY } from '../../graphql'\n\nconst StoreList = (props) => {\n  const [selectedIndex, setSelectedIndex] = React.useState(99);\n  const client = useClient();\n    const { state, dispatch } = useContext(Context);\n\n    useEffect(() => {\n        getStores();\n    }, []);\n\n    const getStores = async () => {\n        const variables = { shopper: state.currentUser._id};\n        const { getStores } = await client.request(\n          GET_STORES_QUERY,\n          variables\n          )\n        dispatch({\n            type: \"GET_STORES\",\n            payload: getStores\n        });\n    };\n    const handleListItemClick = (store, index) => {\n        console.log(\"Clicked !!!\");\n        setSelectedIndex(index);\n\n        dispatch({\n            type: \"SET_STORE\",\n            payload: store\n          });\n      }\n\n    return (\n        <>        \n        <Box sx={{ display: 'flex', my: 2, flexDirection: 'column', alignItems: 'center',}} >\n          <h3>Your Store List</h3>\n            <List sx={{ width: '100%', maxWidth: 300, bgcolor: 'background.paper', borderRadius: 1 }} >\n            {state.stores.map((store, index) => (\n              <Link to={`/${store._id}`} style={{ textDecoration: 'none' }} >\n                <ListItem onClick={() => handleListItemClick(store, index)}\n                  secondaryAction={\n                    <IconButton edge=\"end\" aria-label=\"view\">\n                      <DragIndicatorIcon />\n                    </IconButton>\n                  }>\n                  <ListItemAvatar>\n                    <Avatar>\n                      <StorefrontIcon />\n                    </Avatar>\n                  </ListItemAvatar>\n                  <ListItemText primary={store.title} secondary={store.content} />\n                  </ListItem>\n                <Divider />\n              </Link>\n              ))}\n            </List>\n        </Box>\n        </>\n    )\n}\nexport default StoreList","import React from 'react'\n\nimport { Box } from '@mui/system'\nimport CreateStore from './CreateStore'\nimport StoreList from './StoreList'\n\nfunction StoreIndex() {\n    return (\n        <Box sx={{ bgcolor: '#faf0e7', height: 800 }}>\n            <CreateStore />\n            <StoreList />\n        </Box>\n    )\n}\n\nexport default StoreIndex\n","import React from 'react'\nimport Box from '@mui/material/Box';\n\nfunction Map() {\n    return (\n        <Box sx={{ display: 'flex', justifyContent: 'center', m:1 }}>\n            <h2>Waiting for google map</h2>\n        </Box>\n    )\n}\n\nexport default Map\n","import React from \"react\";\n\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Container from '@mui/material/Container';\nimport Box from '@mui/material/Box';\n\nimport Header from \"./components/Header\";\nimport StoreIndex from \"./components/Store/StoreIndex\";\nimport Map from \"./components/Map\";\n\nconst App = () => {\n  return (\n    <>\n      <CssBaseline />\n      <Container maxWidth=\"m\">\n          <Header />\n          \n          <Box sx={{ display: 'grid', gap: 4, gridTemplateColumns: 'repeat(2, 1fr)', }}>\n            <StoreIndex />\n            <Map />\n          </Box>\n        \n      </Container>\n    </>\n    )\n};\n\nexport default App;\n","import React, { useContext } from \"react\";\nimport { GraphQLClient } from 'graphql-request'\n\nimport { GoogleLogin } from 'react-google-login'\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Container from '@mui/material/Container';\nimport Box from '@mui/material/Box';\nimport { BASE_URL } from \"../../client\";\nimport Context from \"../../context\";\n\nconst ME_QUERY = `\n{\n  me {\n    _id\n    name\n    email\n    picture\n  }\n}\n`\n\nconst Login = ({ classes }) => {\n  const { dispatch } = useContext(Context)\n\n  const onSuccess = async googleUser => {\n    try {\n      const idToken = googleUser.getAuthResponse().id_token\n      const client = new GraphQLClient(BASE_URL, {\n        headers: { authorization: idToken }\n      })\n      const data = await client.request(ME_QUERY)\n      console.log({ data });\n      dispatch({ type: \"LOGIN_USER\", payload: data.me })\n      dispatch({ type: \"IS_LOGGED_IN\", payload: googleUser.isSignedIn() })\n    } \n    catch (err) {\n      onFailure(err);\n    }\n  }\n  const onFailure = err => {\n    console.error(\"Error Login\", err)\n    dispatch({ type: \"IS_LOGGED_IN\", payload: false });\n\n  }\n  return (\n    <>\n      <CssBaseline />\n      <Container maxWidth=\"m\">\n        <Box sx={{ display: 'flex', bgcolor: '#faf0e7', height: '100vh',my: 2, flexDirection: 'column' ,alignItems: 'center', justifyContent: 'center' }} >\n          <Box sx={{ display: 'flex', bgcolor: '#ffffff', height: '50%', p: 5, pt:14, boxShadow: 1, borderRadius: 2 ,flexDirection: 'column' ,alignItems: 'center' }}>\n          <Box sx={{ pb:2 }}><h2>Welcome to Project JAM</h2></Box>\n          \n          <Box> \n          <GoogleLogin\n            clientId=\"26159646015-300gism63ra07n09qteel35pu126vbif.apps.googleusercontent.com\"\n            onSuccess={onSuccess}\n            onFailure={onFailure}\n            //isSignedIn={true}\n            theme= 'dark'\n          /></Box>\n          \n         </Box>\n        </Box>\n      </Container>\n    </>\n  )\n};\n\n\n\nexport default Login;\n","import React, { useContext } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport Login from \"../components/Auth/Login\"\nimport Context from \"../context\";\n\nconst Splash = () => {\n  const { state } = useContext(Context)\n  return state.isAuth ? <Redirect to=\"/\" /> : <Login />\n};\n\nexport default Splash;\n","export default function reducer(state, {type, payload}) {\n    switch (type) {\n\n        case \"LOGIN_USER\":\n            return { \n                ...state, \n                currentUser: payload \n            }\n        case \"IS_LOGGED_IN\":\n            return {\n                ...state,\n                isAuth: payload\n            }\n        case \"SIGNOUT_USER\":\n            return {\n                ...state,\n                isAuth: false,\n                currentUser: null\n            }\n        case \"DELETE_DRAFT\":\n            return {\n                ...state,\n                draft: null\n            };\n        case \"GET_STORES\":\n            return {\n                ...state,\n                stores: payload\n            };\n        case \"SET_STORE\":\n            return {\n                ...state,\n                currentStore: payload,\n                \n            };\n        case \"CREATE_STORE\":\n            const newStore = payload;\n            const prevStores = state.stores.filter(store => store._id !== newStore._id);\n            return {\n                ...state,\n                stores: [...prevStores, newStore]\n            };\n        case \"MODIFY_ITEM\":\n            const updatedCurrentStore = payload;\n            // find and replace\n            const updatedStores = state.stores.map(store =>\n                store._id === updatedCurrentStore._id ? updatedCurrentStore : store\n            );\n            return {\n                ...state,\n                stores: updatedStores,\n                currentStore: updatedCurrentStore\n            };\n       \n    \n        default:\n            return state\n    }\n}\n","import React, { useContext } from \"react\";\nimport { Route, Redirect } from 'react-router-dom'\n\nimport Context from \"./context\" \n\nconst VerifiedRoute = ({ component: Component, ...rest }) => {\n    const { state } = useContext(Context)\n    return (\n        <Route render = {props => \n            !state.isAuth ? <Redirect to=\"/login\" /> : <Component { ...props } />} \n            {...rest} />\n    )\n}\nexport default VerifiedRoute","import React, {useState, useContext} from 'react'\nimport Context from '../../context';\nimport { useClient } from '../../client' \nimport { CREATE_ITEM_MUTATION } from '../../graphql'\n\nimport TextField from '@mui/material/TextField';\nimport Autocomplete, {createFilterOptions} from '@mui/material/Autocomplete';\nimport { Stack, Chip } from '@mui/material';\nimport { Box } from '@mui/system';\n\nfunction Items() {\n    const { state, dispatch } = useContext(Context);\n    const client = useClient();\n    const [itemValue, setItemValue] = useState(null);\n\n    const store = state.currentStore\n    const filter = createFilterOptions();\n\n   \n    const handleClick = async (item) => {\n        const variables = { storeId: store._id, name: item };\n        const { createItem } = await client.request(\n            CREATE_ITEM_MUTATION,\n            variables\n        );\n        dispatch({ type: \"MODIFY_ITEM\", payload: createItem });\n    }\n\n    return (\n        <div>\n            <Box sx={{display: 'flex', flexDirection: 'column', alignItems: 'center',minWidth: 300}}>\n            <h2>Shopping Items</h2>\n                <Autocomplete\n                    value={itemValue}\n                    onChange={(event, newValue) => {\n                        if (typeof newValue === 'string') {\n                            setItemValue(\n                                newValue\n                            );\n                        } else if (newValue && newValue.inputValue) {\n                            // Create a new value from the user input\n                            setItemValue(\n                                newValue.inputValue\n                            );\n                        } else {\n                            setItemValue(newValue);\n                        }\n                    }}\n                    filterOptions={(options, params) => {\n                        const filtered = filter(options, params);\n\n                        const { inputValue } = params;\n                        // Suggest the creation of a new value\n                        const isExisting = options.some((option) => inputValue === option);\n                        if (inputValue !== '' && !isExisting) {\n                            filtered.push(\n                                inputValue,\n                                // `Add \"${inputValue}\"`\n                            );\n                        }\n                        return filtered;\n                    }}\n                    selectOnFocus\n                    clearOnBlur\n                    handleHomeEndKeys\n                    id=\"free-solo-with-text-demo\"\n                    options={itemsArray}\n                    getOptionLabel={(option) => {\n                        // Value selected with enter, right from the input\n                        if (typeof option === 'string') {\n                            return option;\n                        }\n                        // Add \"xxx\" option created dynamically\n                        if (option.inputValue) {\n                            return option.inputValue;\n                        }\n                        // Regular option\n                        return option.title;\n                    }}\n                    renderOption={(props, option) => <li {...props}>{option}</li>}\n                    sx={{ width: 300 }}\n                    freeSolo\n                    renderInput={(params) => (\n                        <TextField {...params} label=\"Items\" />\n                    )}\n                />\n            \n            &nbsp;\n            {itemValue && (\n            <Stack direction=\"row\" spacing={1}>\n                <Chip label= \"Add Item\" variant=\"outlined\" onClick={() => {handleClick(itemValue)}} />    \n            </Stack>\n            )}\n            &nbsp;&nbsp;\n                <Box sx={{ bt: 2, }}>\n                    <Stack direction=\"row\" spacing={1} \n                        sx={{ display: 'flex',flexWrap: 'wrap',\n                            p: 1, m: 1, bgcolor: 'background.paper', maxWidth: 500 , borderRadius: 1 }}>\n                        {itemsArray.map((item, index) => (\n                            <Chip key={index} label={item} variant=\"outlined\" onClick={() => { handleClick(item) }} />\n                        ))}\n                    </Stack>\n                </Box>\n            </Box>\n        </div>\n    )\n}\nconst itemsArray = [\"Strawberry\", \"Blueberry\", \"Mango\", \"Raspberry\",\n\"Oranges\",\"Apples\",\"Bananas\",\"Lettuce\",\"Tomatoes\",\"Squash\",\"Celery\",\"Cucumber\",\"Mushrooms\",\n\"Milk\" ,\"Cheese\",\"Eggs\",\"Cottage cheese\",\"Sour cream\",\"Yogurt\",\"Beef\",\"Poultry\",\n\"Ham\",\"Seafood\",\"Lunch meat\",\"Soda\",\"Juice\",\"Coffee\",\"Tea\",\"Water\",\"Noodles\",\"Rice\",\"Canned\",\n\"Dry mix\",\"Bread\",\"Bagels\",\"Muffins\",\"Cake\",\"Potato chips\",\"Pretzels\",\"Ice cream\",\"Cookies\",\n\"Paper plates\",\"Napkins\",\"Garbage bags\",\"Detergent\",]\n\nexport default Items\n","import React, { useContext } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport Context from '../../context';\nimport Header from '../Header'\n\nimport { useClient } from '../../client' \nimport { DELETE_ITEM_MUTATION, UPDATE_ITEM_MUTATION } from '../../graphql'\nimport Items from '../Item/Items';\n\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport HighlightOffIcon from '@mui/icons-material/HighlightOff';\nimport Stack from '@mui/material/Stack';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport RemoveCircleIcon from '@mui/icons-material/RemoveCircle';\nimport StorefrontIcon from '@mui/icons-material/Storefront';\nimport ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\n\nfunction StoreDetail() {\n    const { state, dispatch } = useContext(Context);\n    const client = useClient();\n    const store = state.currentStore\n    \n    const handleDelete = async (item) => {\n        const variables = { storeId: store._id, itemId: item._id };\n        const { deleteItem } = await client.request(\n            DELETE_ITEM_MUTATION,\n            variables\n        );\n        console.log(deleteItem);\n        dispatch({ type: \"MODIFY_ITEM\", payload: deleteItem });\n        \n    };\n  const handleUpdate = async (item, num) => {\n    console.log(item.quantity,\"  \",num);\n    if (item.quantity > 0 || num >= 0) {\n      const variables = { storeId: store._id, itemId: item._id, quantity: num, isBought: !item.isBought };\n      const { updateItem } = await client.request(\n        UPDATE_ITEM_MUTATION,\n        variables\n      );\n      console.log(updateItem);\n      dispatch({ type: \"MODIFY_ITEM\", payload: updateItem });\n    } else if (item.quantity <1 && num <0) \n    {\n      //console.log(\"Ask if quantity 0 to be DELETE\");\n      handleDelete(item)\n    }\n  };\n\n    return (\n        <>\n        <Header />\n        <Box sx={{ flexGrow: 1, bgcolor: '#faf0e7', height: 800 }}>\n        <Grid container spacing={2}>\n            <Grid item xs={4} sx={{ textAlign: 'center', mx: 4 }} >\n              <h2>Store Detail</h2>\n              <Stack direction=\"row\" spacing={1} sx={{ justifyContent: 'center', mb: 1 }}>\n              <StorefrontIcon /> \n                <h3>{store.title}</h3>\n              </Stack>\n              {/* <h5>{store.content}</h5> */}\n             \n              <List component=\"nav\" dense='true' sx={{ width: '100%', minWidth: 300, bgcolor: 'background.paper', borderRadius: 1 }} >\n                {store.items && store.items.map(item => (\n                  <div>\n                    <ListItem secondaryAction={\n                      <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => { handleDelete(item) }}>\n                        <HighlightOffIcon />\n                      </IconButton>\n                    }>\n                      <ListItemText >\n                        <div  key={item._id}>\n                          {item.name} [ {item.quantity} ]\n\n                          <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => { handleUpdate(item, 1) }}>\n                            <AddCircleIcon />\n                          </IconButton>\n                          <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => { handleUpdate(item, -1) }}>\n                            <RemoveCircleIcon />\n                          </IconButton>\n                        </div>\n                      </ListItemText>\n                    </ListItem >\n                  </div>\n                ))}\n\n                <Link to={`/${store._id}/shopping`} style={{ textDecoration: 'none' }}>\n                <Button variant=\"outlined\" startIcon={<ShoppingCartIcon />}>Go Shopping</Button>                \n                </Link>\n              </List>\n            </Grid>\n            <Grid item xs={6} sx={{ textAlign: 'center'}} >\n                <Items />\n            </Grid>\n            </Grid>\n        </Box>\n        </>\n    )\n}\n\nexport default StoreDetail\n","import React, { useState, useContext } from 'react'\nimport Context from '../../context';\nimport { useClient } from '../../client' \nimport { Link } from 'react-router-dom'\nimport axios from \"axios\";\n\nimport Header from '../Header'\nimport { UPDATE_ITEM_MUTATION, UPDATE_STORE_MUTATION } from '../../graphql'\n\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport StorefrontIcon from '@mui/icons-material/Storefront';\nimport ListAltIcon from '@mui/icons-material/ListAlt';\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport { lightGreen } from '@mui/material/colors';\nimport PhotoCamera from '@mui/icons-material/PhotoCamera';\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\nimport { styled } from '@mui/material/styles';\n\nfunction ShoppingDetail() {\n  const { state, dispatch } = useContext(Context);\n  const [image, setImage] = useState(\"\");\n  const store = state.currentStore\n  const client = useClient();\n  const Input = styled('input')({\n    display: 'none',\n  });\n\n  const handleUpdate = async (item, num) => {\n    const variables = { storeId: store._id, itemId: item._id, quantity: num, isBought: !item.isBought };\n    const { updateItem } = await client.request(\n      UPDATE_ITEM_MUTATION,\n      variables\n    );\n    console.log(updateItem);\n    dispatch({ type: \"MODIFY_ITEM\", payload: updateItem });\n\n  };\n\n  const handleImageUpload = async () => {\n    const data = new FormData();\n    data.append(\"file\", image);\n    data.append(\"upload_preset\", \"jamlist\");\n    data.append(\"cloud_name\", \"projectjam\");\n    const res = await axios.post(\n      \"https://api.cloudinary.com/v1_1/projectjam/image/upload\",\n      data\n    ); \n    return res.data.url;\n  };\n\n  const handleSubmit = async event => {\n    try {\n      event.preventDefault();\n      // setSubmitting(true);\n      const url = await handleImageUpload();\n      const variables = { storeId: store._id ,image: url};\n      const { updateStore } = await client.request(\n        UPDATE_STORE_MUTATION,\n        variables\n      );\n      console.log(updateStore);\n      dispatch({ type: \"MODIFY_ITEM\", payload: updateStore });;\n    } catch (err) {\n      // setSubmitting(false);\n      console.error(\"Error upload image\", err);\n    }\n  };\n    return (\n        <>\n        <Header />\n        <Box sx={{ flexGrow: 1, bgcolor: '#faf0e7', height: 800, }}>\n          <Grid container spacing={2} sx={{justifyContent: 'center'}}>\n            <Grid item xs={4} sx={{ textAlign: 'center', mx: 4 }} >\n              <h2>Store Detail</h2>\n              <Stack direction=\"row\" spacing={1} sx={{ justifyContent: 'center', mb: 1 }}>\n                <StorefrontIcon />\n                <h3>{store.title}</h3>\n              </Stack>\n              {/* <h5>{store.content}</h5> */}\n\n              <List component=\"nav\" dense='true' sx={{ width: '100%', minWidth: 300, bgcolor: 'background.paper', borderRadius: 1 }} >\n                {store.items && store.items.map(item => (\n                  <>\n                    <ListItem\n                      secondaryAction={\n                        <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => { handleUpdate(item, 0) }}>\n                          {item.isBought ?\n                            <CheckBoxIcon sx={{ color: lightGreen[500] }} /> : <CheckBoxIcon />}\n                        </IconButton>\n                      }\n                    >\n                      <ListItemButton>\n                        <ListItemText >\n                          <div key={item._id}> {item.name} [ {item.quantity} ] </div>\n                        </ListItemText>\n                      </ListItemButton>\n                    </ListItem >\n                    <Divider />\n                  </>\n                ))}\n              <Stack direction=\"row\" spacing={1} sx={{ justifyContent: 'center', alignItems: 'center' }}>  \n                <Link to={`/${store._id}`} style={{ textDecoration: 'none' }}>\n                  <Button sx={{ mt: 2 }} variant=\"outlined\" startIcon={<ListAltIcon />}>Edit List</Button>\n                </Link>\n                <label htmlFor=\"icon-button-file\">\n                  <Input accept=\"image/*\" id=\"icon-button-file\" type=\"file\" onChange={e => setImage(e.target.files[0])} />\n                  <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\" sx={{ pt:3, pl:2}}>\n                    <PhotoCamera />\n                  </IconButton>\n                </label>\n                <label htmlFor=\"icon-button-file\">\n                  <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\" sx={{ pt:3}} onClick={handleSubmit}>\n                    <CloudUploadIcon />\n                  </IconButton>\n                </label>\n              </Stack >\n              </List>\n              <Link to={\"/\"} style={{ textDecoration: 'none' }}>\n                  <Button sx={{ mt: 2 }} variant=\"outlined\" >Home</Button>\n                </Link>\n            </Grid>\n            {store.image ?\n            <Grid item xs={4} sx={{ textAlign: 'center', mx: 4 }} >\n                <h2>Receipt</h2>\n                <Box sx={{ maxWidth: 400, border: '1px dashed grey', overflow: 'auto' }}>\n                <img src= {store.image} alt=\"Store Receipt\" style={{width:'400px', height:'600px' }}/>\n                </Box>\n            </Grid>\n            :<></>}\n          </Grid>\n        </Box>\n        </>\n    )\n}\n\nexport default ShoppingDetail\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { useContext, useReducer }from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport Splash from \"./pages/Splash\";\nimport Context from \"./context\";\nimport reducer from \"./reducer\";\nimport VerifiedRoute from \"./VerifiedRoute\";\n\nimport StoreDetail from \"./components/Store/StoreDetail\";\nimport ShoppingDetail from \"./components/Store/ShoppingDetail\";\n//import \"mapbox-gl/dist/mapbox-gl.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst Root = () => {\n  const initialState = useContext(Context)\n  const [state, dispatch] = useReducer(reducer, initialState)\n  console.log({ state });\n\n  return (\n    <Router>\n      <Context.Provider value={{ state, dispatch}}>\n      <Switch>\n        <VerifiedRoute exact path=\"/\" component={App} />\n        \n        <Route path=\"/login\" component={Splash} />\n        <VerifiedRoute exact path=\"/:storeId\" component={StoreDetail}/>\n        <VerifiedRoute exact path=\"/:storeId/shopping\" component={ShoppingDetail}/>\n\n      </Switch>\n      </Context.Provider>\n    </Router>\n  );\n};\n\nReactDOM.render(<Root />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}